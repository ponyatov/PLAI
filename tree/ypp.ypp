%{
#include "hpp.hpp"
%}
%defines %union { Sym*o; }
%token <o> SYM
%token <o> LC RC
%type <o> ex scalar vector
%%
REPL : | REPL ex { cout << $2->dump() << endl; } ;
scalar : SYM ;
ex : scalar
	| ex LC vector RC	{ $$=$1;
					for (auto it=$3->nest.begin(),e=$3->nest.end();it!=e;it++)
						$$->push(*it); } ;
vector :				{ $$=new Vector(); }
	| vector ex			{ $$=$1; $$->push($2); }
;
