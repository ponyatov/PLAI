%{
#include "hpp.hpp"
string LexString;
%}
%x lexstring
%option noyywrap yylineno
S [\+\-]?
N [0-9]+
%%
#[^\n]*			{}

^.end			{yyterminate();}

'				{BEGIN(lexstring); LexString="";}
<lexstring>'	{BEGIN(INITIAL); yylval.o = new Str(LexString); return STR;}
<lexstring>.	{LexString+=yytext[0];}

{N}				TOC(Num,NUM)
{N}\.{N}		TOC(Num,NUM)
{N}[eE]{S}{N}	TOC(Num,NUM)

\(				TOC(Op,SYM)
\)				TOC(Op,SYM)
\[				TOC(Op,SYM)
\]				TOC(Op,SYM)
\{				TOC(Op,SYM)
\}				TOC(Op,SYM)

\+				TOC(Add,ADD)
\-				TOC(Op,SUB)
\*				TOC(Mul,MUL)
\/				TOC(Op,DIV)
\^				TOC(Op,POW)

\=				TOC(Op,SYM)
\@				TOC(Op,SYM)
\~				TOC(Op,SYM)

[a-zA-Z0-9_.]+	TOC(Sym,SYM)

[ \t\r\n]+		{}
.				{yyerror("lexer");}
